version: 2.1

jobs:
  version:
    docker:
      - image: circleci/node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "28:88:d8:e7:d6:4c:69:80:3c:a6:ed:97:45:4d:40:93"
      - checkout
      - restore_cache:
          key: 'node-v1-{{ checksum "package.json" }}'
      - restore_cache:
          key: 'yarn-v1-{{ checksum "yarn.lock" }}'
      - run:
          name: 'Configure git'
          command: |
            git config user.email "jvictorsantos852@gmail.com"
            git config user.name "thejoaov"
            yarn config set version-git-message "chore: bump version v%s"
      - run:
          name: 'Install dependencies'
          command: 'yarn'
      - run:
          name: 'Generate version'
          command: yarn version --patch
      - run:
          name: 'Update git'
          command: |
            git push -q git@github.com:thejoaov/gobarber-14-server.git --tags
            git push -q git@github.com:thejoaov/gobarber-14-server.git main
      - save_cache:
          key: 'node-v1-{{ checksum "package.json" }}'
          paths:
            - node_modules
      - save_cache:
          key: 'yarn-v1-{{ checksum "yarn.lock" }}'
          paths:
            - ~/.cache/yarn

  test:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: 'Setup Environment Variables'
          command: |
            echo 'export CC_TEST_REPORTER_ID="$CC_TEST_REPORTER_ID"' >> $BASH_ENV
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - restore_cache:
          key: 'node-v1-{{ checksum "package.json" }}'
      - restore_cache:
          key: 'yarn-v1-{{ checksum "yarn.lock" }}'
      - restore_cache:
          key: 'eslint-v1-{{ checksum ".eslintrc.js" }}'
      - run:
          name: 'Install dependencies'
          command: 'yarn'
      - run:
          name: 'Run linter'
          command: 'yarn lint'
      - run:
          name: 'Run tests and get coverage'
          command: 'yarn test:ci'
      - run:
          name: 'Send test coverage to CodeClimate'
          command: |
            ./cc-test-reporter format-coverage -t lcov ./coverage/lcov.info
            ./cc-test-reporter upload-coverage
      - save_cache:
          key: 'node-v1-{{ checksum "package.json" }}'
          paths:
            - node_modules
      - save_cache:
          key: 'yarn-v1-{{ checksum "yarn.lock" }}'
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: 'eslint-v1-{{ checksum ".eslintrc.js" }}'
          paths:
            - .eslintcache

workflows:
  versioning:
    jobs:
      - check:
          type: approval
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
      - version:
          requires:
            - check
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
  test:
    jobs:
      - test

